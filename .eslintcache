[{"C:\\Users\\pierr\\Desktop\\code\\_tuto\\power4\\frontend\\src\\index.js":"1","C:\\Users\\pierr\\Desktop\\code\\_tuto\\power4\\frontend\\src\\App.js":"2","C:\\Users\\pierr\\Desktop\\code\\_tuto\\power4\\frontend\\src\\pages\\Login.js":"3","C:\\Users\\pierr\\Desktop\\code\\_tuto\\power4\\frontend\\src\\pages\\Register.js":"4","C:\\Users\\pierr\\Desktop\\code\\_tuto\\power4\\frontend\\src\\pages\\Accueil.js":"5","C:\\Users\\pierr\\Desktop\\code\\_tuto\\power4\\frontend\\src\\UserContext.js":"6","C:\\Users\\pierr\\Desktop\\code\\_tuto\\power4\\frontend\\src\\component\\decoButton.js":"7","C:\\Users\\pierr\\Desktop\\code\\_tuto\\power4\\frontend\\src\\lib\\setUser\\setUser.js":"8","C:\\Users\\pierr\\Desktop\\code\\_tuto\\power4\\frontend\\src\\lib\\setUser\\unsetUser.js":"9","C:\\Users\\pierr\\Desktop\\code\\_tuto\\power4\\frontend\\src\\lib\\setUser\\verifyToken.js":"10","C:\\Users\\pierr\\Desktop\\code\\_tuto\\power4\\frontend\\src\\component\\Initialisor.js":"11","C:\\Users\\pierr\\Desktop\\code\\_tuto\\power4\\frontend\\src\\component\\userView.js":"12","C:\\Users\\pierr\\Desktop\\code\\_tuto\\power4\\frontend\\src\\pages\\game\\Game.js":"13","C:\\Users\\pierr\\Desktop\\code\\_tuto\\power4\\frontend\\src\\component\\header.js":"14","C:\\Users\\pierr\\Desktop\\code\\_tuto\\power4\\frontend\\src\\component\\pvGame.js":"15","C:\\Users\\pierr\\Desktop\\code\\_tuto\\power4\\frontend\\src\\SocketContext.js":"16","C:\\Users\\pierr\\Desktop\\code\\_tuto\\power4\\frontend\\src\\lib\\setUser\\login\\sendDataLogin.js":"17","C:\\Users\\pierr\\Desktop\\code\\_tuto\\power4\\frontend\\src\\pages\\Profile.js":"18","C:\\Users\\pierr\\Desktop\\code\\_tuto\\power4\\frontend\\src\\component\\TimeBlock.js":"19","C:\\Users\\pierr\\Desktop\\code\\_tuto\\power4\\frontend\\src\\component\\rankedQueue.js":"20","C:\\Users\\pierr\\Desktop\\code\\_tuto\\power4\\frontend\\src\\lib\\game\\getGameInfo.js":"21","C:\\Users\\pierr\\Desktop\\code\\_tuto\\power4\\frontend\\src\\lib\\user\\getUserInfoById.js":"22","C:\\Users\\pierr\\Desktop\\code\\_tuto\\power4\\frontend\\src\\lib\\user\\getUserInfoByPseudo.js":"23","C:\\Users\\pierr\\Desktop\\code\\_tuto\\power4\\frontend\\src\\lib\\rank\\rankToReadable.js":"24","C:\\Users\\pierr\\Desktop\\code\\_tuto\\power4\\frontend\\src\\lib\\time\\secondToReadable.js":"25","C:\\Users\\pierr\\Desktop\\code\\_tuto\\power4\\frontend\\src\\pages\\game\\components\\WinnerModal.js":"26","C:\\Users\\pierr\\Desktop\\code\\_tuto\\power4\\frontend\\src\\pages\\game\\components\\allCase.js":"27","C:\\Users\\pierr\\Desktop\\code\\_tuto\\power4\\frontend\\src\\pages\\game\\components\\GamePlayerPreview.js":"28","C:\\Users\\pierr\\Desktop\\code\\_tuto\\power4\\frontend\\src\\pages\\game\\components\\Case.js":"29","C:\\Users\\pierr\\Desktop\\code\\_tuto\\power4\\frontend\\src\\pages\\game\\components\\playableLines.js":"30","C:\\Users\\pierr\\Desktop\\code\\_tuto\\power4\\frontend\\src\\lib\\historic\\getGames.js":"31","C:\\Users\\pierr\\Desktop\\code\\_tuto\\power4\\frontend\\src\\lib\\game\\isInGame.js":"32","C:\\Users\\pierr\\Desktop\\code\\_tuto\\power4\\frontend\\src\\lib\\stats\\getStats.js":"33","C:\\Users\\pierr\\Desktop\\code\\_tuto\\power4\\frontend\\src\\lib\\stats\\setWinrate.js":"34","C:\\Users\\pierr\\Desktop\\code\\_tuto\\power4\\frontend\\src\\lib\\rank\\setRankImage.js":"35"},{"size":198,"mtime":1610699849954,"results":"36","hashOfConfig":"37"},{"size":1527,"mtime":1612334302097,"results":"38","hashOfConfig":"37"},{"size":1966,"mtime":1611940202605,"results":"39","hashOfConfig":"37"},{"size":3165,"mtime":1611818264973,"results":"40","hashOfConfig":"37"},{"size":2016,"mtime":1612347893352,"results":"41","hashOfConfig":"37"},{"size":86,"mtime":1611940309289,"results":"42","hashOfConfig":"37"},{"size":606,"mtime":1611646678798,"results":"43","hashOfConfig":"37"},{"size":235,"mtime":1611138168836,"results":"44","hashOfConfig":"37"},{"size":143,"mtime":1611137504385,"results":"45","hashOfConfig":"37"},{"size":768,"mtime":1611138190360,"results":"46","hashOfConfig":"37"},{"size":396,"mtime":1610959954604,"results":"47","hashOfConfig":"37"},{"size":843,"mtime":1612247872630,"results":"48","hashOfConfig":"37"},{"size":4030,"mtime":1612338409286,"results":"49","hashOfConfig":"37"},{"size":1182,"mtime":1611856693999,"results":"50","hashOfConfig":"37"},{"size":7512,"mtime":1612345242228,"results":"51","hashOfConfig":"37"},{"size":88,"mtime":1611728388445,"results":"52","hashOfConfig":"37"},{"size":519,"mtime":1611818171768,"results":"53","hashOfConfig":"37"},{"size":4822,"mtime":1612347824211,"results":"54","hashOfConfig":"37"},{"size":372,"mtime":1611853747303,"results":"55","hashOfConfig":"37"},{"size":4124,"mtime":1612248027994,"results":"56","hashOfConfig":"37"},{"size":498,"mtime":1612247297499,"results":"57","hashOfConfig":"37"},{"size":479,"mtime":1612338089487,"results":"58","hashOfConfig":"37"},{"size":501,"mtime":1612247282769,"results":"59","hashOfConfig":"37"},{"size":303,"mtime":1612247312916,"results":"60","hashOfConfig":"37"},{"size":188,"mtime":1612247322443,"results":"61","hashOfConfig":"37"},{"size":5984,"mtime":1612276554946,"results":"62","hashOfConfig":"37"},{"size":1502,"mtime":1612251151994,"results":"63","hashOfConfig":"37"},{"size":2341,"mtime":1612343754087,"results":"64","hashOfConfig":"37"},{"size":1036,"mtime":1612247547841,"results":"65","hashOfConfig":"37"},{"size":343,"mtime":1612247556671,"results":"66","hashOfConfig":"37"},{"size":454,"mtime":1612252111241,"results":"67","hashOfConfig":"37"},{"size":486,"mtime":1612257895676,"results":"68","hashOfConfig":"37"},{"size":650,"mtime":1612275088586,"results":"69","hashOfConfig":"37"},{"size":183,"mtime":1612347209694,"results":"70","hashOfConfig":"37"},{"size":539,"mtime":1612276301510,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"1srs1vf",{"filePath":"75","messages":"76","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"74"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"74"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"74"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"74"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"74"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"74"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"74"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"74"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"74"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"74"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"74"},"C:\\Users\\pierr\\Desktop\\code\\_tuto\\power4\\frontend\\src\\index.js",[],["158","159"],"C:\\Users\\pierr\\Desktop\\code\\_tuto\\power4\\frontend\\src\\App.js",["160","161","162","163"],"import React, {useState, useMemo, useEffect} from 'react'\nimport './main.scss'\nimport {BrowserRouter as Router, Route } from 'react-router-dom'\nimport Login from './pages/Login'\nimport Accueil from './pages/Accueil'\nimport Register from './pages/Register'\nimport Game from './pages/game/Game'\nimport Profile from './pages/Profile'\nimport {UserContext} from './UserContext'\nimport verifyUser from './lib/setUser/verifyToken'\nimport Header from './component/header'\nimport { SocketContext } from './SocketContext'\nimport { io } from 'socket.io-client';\n\nfunction App() {\n  const [user, setUser] = useState(null);\n  const [socket, setSocket] = useState(null)\n  \n  useEffect(() => {\n    verifyUser(setUser)\n    setSocket(io('http://localhost:8080'))\n  }, [])\n\n  const value = useMemo(() => ({user, setUser}), [])\n  const valueSocket = useMemo(() => ({socket, setSocket}), [])\n\n  return (\n    <>\n        <SocketContext.Provider value={{socket, setSocket}}>\n          <UserContext.Provider value={{user, setUser}}>\n            <Router>\n                  <Header />\n                  <Route path=\"/\" component={Accueil} exact/>\n                  <Route path=\"/login\" component={Login} exact/>\n                  <Route path=\"/register\" component={Register} exact/>\n                  <Route path=\"/game/:slug\" component={Game} exact/>\n                  <Route path=\"/profile/:slug\" component={Profile} exact/>\n            </Router>\n          </UserContext.Provider>\n        </SocketContext.Provider>\n    </>\n  );\n}\n\nexport default App;\n","C:\\Users\\pierr\\Desktop\\code\\_tuto\\power4\\frontend\\src\\pages\\Login.js",["164"],"import React, { useRef, useState, useContext } from 'react'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport { UserContext } from '../UserContext'\r\nimport setUserFunction from '../lib/setUser/setUser'\r\nimport sendDataLogin from '../lib/setUser/login/sendDataLogin'\r\n\r\nexport default function Login() {\r\n    const { user, setUser } = useContext(UserContext)\r\n\r\n    const [loginError, setLoginError] = useState(false)\r\n    const [redirect, setRedirect] = useState(false)\r\n\r\n    const handleClick = async(e, pseudo, password) => {\r\n        e.preventDefault()\r\n        setLoginError(false)\r\n        let connexion = await sendDataLogin(pseudo, password)\r\n        if(connexion.status === 200) {\r\n            setLoginError(false)\r\n            setUserFunction(connexion.value, setUser)\r\n            setRedirect(true)//only for re-render\r\n        } else {\r\n            setLoginError(true)\r\n        }\r\n    }\r\n\r\n    const refPseudo = useRef();\r\n    const refPass = useRef();\r\n\r\n    return (\r\n        <div>\r\n            {user && <Redirect to=\"/\" />}\r\n            <h1>Login</h1>\r\n            <div className=\"accueil\">\r\n                <form>\r\n                    <div>\r\n                        <label htmlFor=\"pseudo\">Pseudo :</label>\r\n                        <input type=\"pseudo\" name=\"pseudo\" ref={refPseudo}></input>\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor=\"password\">Password :</label>\r\n                        <input type=\"password\" name=\"password\" ref={refPass}></input>\r\n                    </div>\r\n                    <button onClick={(e)=> handleClick(e, refPseudo.current.value, refPass.current.value)}>Connexion</button>\r\n                    {loginError && <p className=\"error\">wrong password / login combinaison</p>}\r\n                </form>\r\n                <Link to=\"/register\">\r\n                    <p>I dont have account.</p>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\pierr\\Desktop\\code\\_tuto\\power4\\frontend\\src\\pages\\Register.js",[],"C:\\Users\\pierr\\Desktop\\code\\_tuto\\power4\\frontend\\src\\pages\\Accueil.js",["165","166","167"],"import React, {useContext, useState, useEffect} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { UserContext } from '../UserContext'\r\nimport { SocketContext } from '../SocketContext'\r\nimport PvGame from '../component/pvGame'\r\nimport RankedGame from '../component/rankedQueue'\r\n\r\nexport default function Accueil() {\r\n    const { user, setUser } = useContext(UserContext)\r\n    const { socket, setSocket } = useContext(SocketContext)\r\n    const [pvGameVisible, setPvGameVisible] = useState(false)\r\n    const [rankedGameVisible, setRankedGameVisible] = useState(false)\r\n    const [listGames, setlistGames] = useState(null)\r\n    \r\n    useEffect(()=> {\r\n        if(socket){\r\n            socket.on('allGamesRep',(res)=>setlistGames(res));\r\n            socket.emit('allGamesReq');\r\n        }\r\n    }, [socket])\r\n\r\n    const handleClick = (button) => {\r\n        if(button === 'private') {\r\n            setPvGameVisible(!pvGameVisible)\r\n            setRankedGameVisible(false)\r\n        } else {\r\n            setRankedGameVisible(!rankedGameVisible)\r\n            setPvGameVisible(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div class=\"accueil\">\r\n            {user ?\r\n                <>\r\n                    <button className=\"createGameButton\" onClick={() => handleClick('private')}>Private game</button>\r\n                    {pvGameVisible && <PvGame user={user} onClick={handleClick}/>}\r\n                    <button className=\"createGameButton\" onClick={() => handleClick('ranked')}>Ranked game</button>\r\n                    {rankedGameVisible && <RankedGame user={user} onClick={handleClick}/>}\r\n                {/* <CreatedGames listGames={listGames}/> */}\r\n                </>\r\n                : \r\n                <div className=\"notConnectedWindow\">\r\n                    <Link to=\"/login\" className=\"createGameButton\">Connection</Link>\r\n                    <Link to=\"/register\" className=\"createGameButton\">Create an account</Link>\r\n                </div>\r\n\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\pierr\\Desktop\\code\\_tuto\\power4\\frontend\\src\\UserContext.js",[],"C:\\Users\\pierr\\Desktop\\code\\_tuto\\power4\\frontend\\src\\component\\decoButton.js",["168"],"import React, { useContext } from 'react'\r\nimport unsetUser from '../lib/setUser/unsetUser'\r\nimport { UserContext } from '../UserContext'\r\nimport deconnection from '../images/deco.svg'\r\n\r\nexport default function DecoButton({onClickChanger}) {\r\n    const { user, setUser } = useContext(UserContext)\r\n\r\n    return (\r\n        <div \r\n        onClick={() => {\r\n            unsetUser(setUser)\r\n        }\r\n        }>\r\n            <img \r\n                src={deconnection} \r\n                alt=\"deconnection\"\r\n                width='40px'\r\n                height='40px'\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\pierr\\Desktop\\code\\_tuto\\power4\\frontend\\src\\lib\\setUser\\setUser.js",[],"C:\\Users\\pierr\\Desktop\\code\\_tuto\\power4\\frontend\\src\\lib\\setUser\\unsetUser.js",[],"C:\\Users\\pierr\\Desktop\\code\\_tuto\\power4\\frontend\\src\\lib\\setUser\\verifyToken.js",[],"C:\\Users\\pierr\\Desktop\\code\\_tuto\\power4\\frontend\\src\\component\\Initialisor.js",["169"],"import React, {useMemo, useContext} from 'react'\r\nimport verifyUser from '../lib/setUser/verifyToken'\r\nimport { UserContext } from '../UserContext'\r\n\r\n\r\nexport default function Initialisor() {\r\n    console.log(\"rendered\")\r\n    const { setUser } = useContext(UserContext) \r\n\r\n    useMemo(() => verifyUser(setUser)\r\n    , [])\r\n\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n",["170","171"],"C:\\Users\\pierr\\Desktop\\code\\_tuto\\power4\\frontend\\src\\component\\userView.js",[],"C:\\Users\\pierr\\Desktop\\code\\_tuto\\power4\\frontend\\src\\pages\\game\\Game.js",["172","173"],"import React, {useContext, useState, useEffect} from 'react'\r\nimport UserView from '../../component/userView';\r\nimport { UserContext } from '../../UserContext'\r\nimport { AllCase } from './components/allCase'\r\nimport { SocketContext } from '../../SocketContext'\r\nimport { useParams } from 'react-router-dom'\r\nimport WinnerModal from './components/WinnerModal'\r\nimport GamePlayerPreview from './components/GamePlayerPreview';\r\n\r\nexport default function Game() {\r\n    const { user } = useContext(UserContext)\r\n    const {socket} = useContext(SocketContext)\r\n    let {slug} = useParams()\r\n\r\n    const [gameValue, setGameValue] = useState(null)\r\n    \r\n\r\n    //quand socket et défini\r\n    useEffect(function(){\r\n        if(socket){\r\n            //join the room\r\n            socket.emit('joinGameRoom', slug)\r\n            //game state\r\n            socket.on('gameState', (res)=>{\r\n                setGameValue(res)\r\n            });\r\n            //game over\r\n            return () => {\r\n                socket.removeAllListeners('gameState')\r\n            }\r\n        }\r\n    }, [socket])\r\n\r\n    useEffect(function(){\r\n        if(user){\r\n            (async function() {\r\n                const data = {\r\n                    gameId: slug\r\n                }\r\n                const response = await fetch('http://localhost:8080/api/auth/game/information', {\r\n                    headers: {\r\n                        \"Content-type\": \"application/json;charset=UTF-8\",\r\n                        'Accept': 'application/json'\r\n                    },\r\n                    method: \"POST\",\r\n                    body: JSON.stringify(data)\r\n                })\r\n                const responseJson = await response.json()  // convert to json\r\n                setGameValue(responseJson.game)\r\n            })()\r\n        }\r\n    },[user])\r\n\r\n    function handlePlay(moveCase) {\r\n        const data = {\r\n            userId: user.userId,\r\n            token: user.token,\r\n            gameId: slug,\r\n            move: moveCase\r\n        }\r\n        console.log(data.move)\r\n        socket.emit('playMove', data);\r\n    }\r\n\r\n    return (\r\n        <div className=\"game\">\r\n            {gameValue !== null ?\r\n            <>\r\n                {gameValue.playerTurn ?\r\n                    <div className=\"gamePlace\">\r\n                        {gameValue.winner &&\r\n                            <WinnerModal userId={user.userId} gameValue={gameValue}/>\r\n                        }\r\n                        {/* <div className=\"game__type\">\r\n                            Normal game\r\n                            <div className=\"game__type__bg\"></div>\r\n                        </div> */}\r\n                        <div className=\"wholeGame\">\r\n                            <div className=\"gameContainer\">\r\n                                {gameValue.moves.length === 0 && <div className=\"afkAdvertisor\"><UserView userId={gameValue.playerTurn}/> \r\n                                    have to start the game or he will automatically lose in\r\n                                    <div className=\"aflAdvertisor__count\"> {gameValue.afkAdvertisor}s</div>\r\n                                </div>}\r\n                                <AllCase onClick={handlePlay} gameValue={gameValue}/>\r\n                            </div>\r\n                            \r\n                            {/* <div className=\"playerTurn\">\r\n                                <UserView userId={gameValue.playerTurn}/>\r\n                            </div> */}\r\n                        </div>\r\n                        <div className=\"game__players\">\r\n                            <GamePlayerPreview gameValue={gameValue} player={\"host\"} position={\"left\"}/>\r\n                            <GamePlayerPreview gameValue={gameValue} player={\"opponent\"} position={\"right\"}/>\r\n                        </div> \r\n                    </div>      \r\n                :\r\n                    <h1>Waiting for an opponent</h1>\r\n                }\r\n\r\n            </>\r\n            :\r\n            <p>Loading</p>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\pierr\\Desktop\\code\\_tuto\\power4\\frontend\\src\\component\\header.js",[],"C:\\Users\\pierr\\Desktop\\code\\_tuto\\power4\\frontend\\src\\component\\pvGame.js",["174","175","176"],"import React, { useState, useContext, useRef, useEffect } from 'react'\r\nimport { SocketContext } from '../SocketContext'\r\nimport { useHistory } from 'react-router';\r\nimport secondToReadable from '../lib/time/secondToReadable'\r\nimport TimeBlock from './TimeBlock'\r\nimport { motion } from 'framer-motion'\r\nimport cross from '../images/cross.svg'\r\n\r\nexport default function PvGame({user, onClick}) {\r\n    const { socket } = useContext(SocketContext)\r\n    const [tab, setTab] = useState('join')\r\n    let createClass = '';\r\n    let joinClass = '';\r\n    if(tab === 'join') {\r\n        joinClass = 'pvGame__tab__selected'\r\n        createClass = 'pvGame__tab__notSelected'\r\n    } else {\r\n        joinClass = 'pvGame__tab__notSelected'\r\n        createClass = 'pvGame__tab__selected'\r\n    }\r\n\r\n    return (\r\n        <div className=\"pvGame--container\">\r\n            <motion.div \r\n                className=\"pvGame__background\" \r\n                onClick={() => onClick('private')}\r\n                initial={{opacity: 0}}\r\n                animate={{ opacity: 0.8}}\r\n                transition={{\r\n                    duration: 0.4,\r\n                    ease: 'linear'\r\n                }}\r\n            />\r\n            <motion.div \r\n                className=\"pvGame\"\r\n                initial={{ \r\n                    opacity: 0,\r\n                    y: '-100%'\r\n                 }}\r\n                animate={{ \r\n                    opacity: 1,\r\n                    y: 0\r\n                 }}\r\n                transition={{duration: 0.4}}\r\n            >\r\n                <div className=\"pvGame__return\" onClick={() => onClick('private')}><img src={cross} /></div>\r\n                <div className=\"pvGame__tab\">\r\n                    <div onClick={() => {setTab('create')}} className={createClass}>Create</div>\r\n                    <div onClick={() => {setTab('join')}} className={joinClass}>Join</div>\r\n                </div>\r\n                {tab === 'join' ? (\r\n                    <Join user={user} socket={socket}/>\r\n                ) : (\r\n                    <Create user={user} socket={socket}/>\r\n                )}\r\n            </motion.div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction Join({ user, socket }) {\r\n    const inputRef = useRef(null)\r\n    const [joining, setJoining] = useState(false)\r\n    const [error, setError] = useState(false)\r\n    let history = useHistory();\r\n\r\n    useEffect(() => {\r\n        socket._callbacks.$joinedPvGame = null\r\n        socket.on('joinedPvGame', (socketData) => {\r\n            if(socketData) {\r\n                history.push(\"/game/\" + socketData)\r\n            } else {\r\n                setJoining(false)\r\n                setError(true)\r\n            }\r\n        })\r\n\r\n        return () => {\r\n            socket.removeAllListeners('joinedPvGame')\r\n        }\r\n    }, [])\r\n\r\n    const handleClick = function() {\r\n        socket.emit('joinPvGame', {\r\n            userId: user.userId,\r\n            token: user.token,\r\n            gameId: inputRef.current.value\r\n        })\r\n        setJoining(true)\r\n    }\r\n\r\n    return joining ? \r\n    <div className=\"pvGame__create\">\r\n        <h2>Loading...</h2>\r\n    </div>\r\n    :\r\n    <div className=\"pvGame__create\">\r\n        <h2>Copy the link here</h2>\r\n        <div className=\"pvGame__create__linkAndError\">\r\n            <input ref={inputRef}></input>\r\n            {error && <p className=\"error\">Invalid link</p>}\r\n        </div>\r\n        <button onClick={handleClick}>Validate</button>\r\n    </div>\r\n}\r\n\r\n\r\nfunction Create({ user, socket }) {\r\n    const [copied, setCopied] = useState(false)\r\n    const [timeSelected, setTimeSelected] = useState('3:00')\r\n    const [created, setCreated] = useState(false)\r\n    const [gameValue, setGameValue] = useState(null)\r\n    let history = useHistory();\r\n    \r\n    useEffect(() => {\r\n        socket._callbacks.$createdPvGame = null\r\n        socket.on('createdPvGame', (socketData) => {\r\n            setGameValue(socketData.game)\r\n            setCreated(true)\r\n            console.log(socketData)\r\n        })\r\n        //clear all the repetitions of useless events 'on'\r\n        socket._callbacks.$joinedPvGame = null\r\n        socket.on('joinedPvGame', (socketData) => {\r\n            if(socketData) {\r\n                history.push(\"/game/\" + socketData)\r\n            } \r\n        })\r\n\r\n        return () => {\r\n            if(gameValue) {\r\n                console.log('lets goo')\r\n                socket.removeAllListeners('joinedPvGame')\r\n                socket.removeAllListeners('createdPvGame')\r\n                socket.emit('deletePvGame', {gameId : gameValue._id})\r\n            }\r\n        }\r\n    }, [gameValue])\r\n\r\n    \r\n    async function createGame(time, socket) {\r\n        setCreated('loading')\r\n        // dataResult = await dataResult.json()\r\n        socket.emit('createPvGame', {\r\n            userId: user.userId,\r\n            token: user.token,\r\n            time: time\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"pvGame__create\">\r\n            {!created ? \r\n                <>\r\n                    <h2>Create your game</h2>\r\n                    <div className=\"pvGame__create__timeContainer\">\r\n                        <TimeBlock time='0:15' timeSelected={timeSelected} onClick={(time) => setTimeSelected(time)} />\r\n                        <TimeBlock time='0:30' timeSelected={timeSelected} onClick={(time) => setTimeSelected(time)} />\r\n                        <TimeBlock time='1:00' timeSelected={timeSelected} onClick={(time) => setTimeSelected(time)} />\r\n                        <TimeBlock time='3:00' timeSelected={timeSelected} onClick={(time) => setTimeSelected(time)} />\r\n                        <TimeBlock time='5:00' timeSelected={timeSelected} onClick={(time) => setTimeSelected(time)} />\r\n                    </div>\r\n                    \r\n                    <div className=\"pvGame__create__buttonCreate\">\r\n                        <button \r\n                        onClick={() => createGame(\r\n                            parseInt(timeSelected.split(':')[0])*60 + (parseInt(timeSelected.split(':')[1])),\r\n                            socket\r\n                        )}>Lets go</button>\r\n                    </div>\r\n                    {/* this button create a game => if the creator is already in game, redirect on it instead */}\r\n                </>\r\n                :\r\n                <>\r\n                {created === 'loading' ? <h2>Loading ...</h2>\r\n                :\r\n                    <>\r\n                        {/* wait for the friend to join, when he's there, start the game + redirect both players*/}\r\n                        <div className=\"loader\"></div>\r\n                        <h2>Send this code to your friend</h2>\r\n                        <div className=\"pvGame__create__linkBox\" onClick={()=>setCopied(true)}>\r\n                            <div className=\"pvGame__create__linkBox__text\">{gameValue._id}</div>\r\n                            <div className=\"pvGame__create__linkBox__copy\">copy</div>\r\n                            {copied && <p className=\"pvGame__create__linkCopied\">you have successfully copied :)</p>}\r\n                        </div>\r\n                        <div className=\"pvGame__create__timeContainer\">\r\n                            <div className=\"pvGame__create__timeContainer__block pvGame__create__timeContainer__block__selected\">\r\n                                {secondToReadable(gameValue.time.host)}\r\n                            </div>\r\n                        </div>\r\n                    </>}\r\n                </>}\r\n\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\pierr\\Desktop\\code\\_tuto\\power4\\frontend\\src\\SocketContext.js",[],"C:\\Users\\pierr\\Desktop\\code\\_tuto\\power4\\frontend\\src\\lib\\setUser\\login\\sendDataLogin.js",[],"C:\\Users\\pierr\\Desktop\\code\\_tuto\\power4\\frontend\\src\\pages\\Profile.js",["177","178","179","180","181"],"import React, {useState, useEffect} from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport getUserInfoByPseudo from '../lib/user/getUserInfoByPseudo'\r\nimport profilePicture from '../images/pierre.jpg'\r\nimport rankImg from '../images/rank/plat.png'\r\nimport rankToReadable from '../lib/rank/rankToReadable'\r\nimport getGames from '../lib/historic/getGames'\r\nimport isInGame from '../lib/game/isInGame'\r\nimport getStats from '../lib/stats/getStats'\r\nimport setRankImage from '../lib/rank/setRankImage'\r\n\r\nexport default function Profile() {\r\n    const [profileState, setProfileState] = useState(null)\r\n    const [historic, setHistoric] = useState(null)\r\n    const [actualGame, setActualGame] = useState(null)\r\n    const [stats, setStats] = useState(null)\r\n    const history = useHistory()\r\n    let {slug} = useParams()\r\n\r\n    useEffect(async () => {\r\n        //profile\r\n        let profileInformation = await getUserInfoByPseudo(slug)\r\n        profileInformation.rank = rankToReadable(profileInformation.rank)\r\n        if(!profileInformation.hasOwnProperty('error')) {\r\n            setProfileState(profileInformation)\r\n        } else {\r\n            //manage error 404\r\n            setProfileState('unknown')\r\n        }\r\n        //historic\r\n        const allGames = await getGames(profileInformation)\r\n        setHistoric(allGames.historic)\r\n        //stats\r\n        setStats(await getStats(profileInformation.id))\r\n        //actual game\r\n        setActualGame(await isInGame(profileInformation.id))\r\n    }, [])\r\n\r\n\r\n    return ( \r\n        <div>\r\n            <div className=\"profile--wrapper\">\r\n            {profileState === 'unknown' ? <div className=\"error404\">404 - This profile does not exist :( </div> \r\n            :\r\n            <>\r\n            <div className=\"profile\">\r\n                \r\n                <div className=\"profile__picture\">\r\n                    <img src={profilePicture} width={300} height={300} />\r\n                </div>\r\n                <div className=\"profile__text\">\r\n                    <h2>{!profileState ?  'Loading ...' : profileState.pseudo}</h2>\r\n                    <p className=\"profile__text__rank\">Rank : {!profileState ?  'Loading ...' : profileState.rank}</p>\r\n                    {stats ? <p className=\"profile__text__winrate\">Winrate {stats.winrate}% (\r\n                        <span  className=\"profile__text__winrate__win\">{stats.wins} W</span>/\r\n                        <span  className=\"profile__text__winrate__null\">{stats.draws} N</span>/\r\n                        <span  className=\"profile__text__winrate__lose\">{stats.loses} L</span>)\r\n                    </p> : <p className=\"profile__text__winrate\">Loading...</p>}\r\n                </div>\r\n                <div className=\"profile__rank\">\r\n                    {(profileState !== 'unknow' && profileState) && <img src={setRankImage(profileState.rank)} alt='rank'/>}\r\n                </div>\r\n            </div>\r\n            {actualGame && \r\n                <div className=\"history\" onClick={() => history.push(`../game/${actualGame._id}`)}>\r\n                    <h2>{profileState.pseudo} is actually playing !</h2>\r\n                    <div className=\"history__actualGame\">\r\n                        <div>\r\n                            <p>{actualGame.host.pseudo}</p>\r\n                        </div>\r\n                        <p>VS</p>\r\n                        <div>\r\n                            <p>{actualGame.opponent.pseudo}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            }\r\n            <div className=\"history\">\r\n                <h2>History</h2>\r\n                {historic ? <GameHistory games={historic}/> : <div className=\"loader\" />}\r\n            </div>\r\n            </>\r\n            }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nfunction GameHistory({games}) {\r\n    return (\r\n        <>\r\n        {games.map(x => \r\n            <div className=\"gameHistory\" key={x._id}>\r\n                <div className=\"gameHistory__players\">\r\n                    <div className={x.winner === x.host.id ? \"gameHistory__players__win\" : \"\"}>\r\n                        <p>{x.host.pseudo}</p>\r\n                    </div>\r\n                    <p>VS</p>\r\n                    <div className={x.winner === x.opponent.id ? \"gameHistory__players__win\" : \"\"}>\r\n                        <p>{x.opponent.pseudo}</p>\r\n                    </div>\r\n                </div>\r\n                <p className=\"gameHistory__date\">{x.date.toString().substr(0,10)}</p>\r\n            </div>\r\n        )}\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n{/* <div className=\"gameHistory\">\r\n<div className=\"gameHistory__players\">\r\n    <div  className=\"gameHistory__players__win\">\r\n        <p>Goldaxe</p>\r\n    </div>\r\n    <p>VS</p>\r\n    <div>\r\n        <p>lol</p>\r\n    </div>\r\n</div>\r\n<p>28 jan. 2021</p>\r\n</div> */}","C:\\Users\\pierr\\Desktop\\code\\_tuto\\power4\\frontend\\src\\component\\TimeBlock.js",[],"C:\\Users\\pierr\\Desktop\\code\\_tuto\\power4\\frontend\\src\\component\\rankedQueue.js",["182","183","184","185","186"],"import React, { useState, useContext, useRef, useEffect } from 'react'\r\nimport { SocketContext } from '../SocketContext'\r\nimport { useHistory } from 'react-router';\r\nimport secondToReadable from '../lib/time/secondToReadable'\r\nimport TimeBlock from './TimeBlock';\r\nimport { motion } from 'framer-motion'\r\nimport cross from '../images/cross.svg'\r\n\r\n\r\n\r\nexport default function RankedGame({user, onClick}) {\r\n    const { socket, setSocket } = useContext(SocketContext)\r\n\r\n    return (\r\n        <div className=\"pvGame--container\">\r\n            <motion.div \r\n                className=\"pvGame__background\" \r\n                onClick={() => onClick('ranked')}\r\n                initial={{opacity: 0}}\r\n                animate={{ opacity: 0.8}}\r\n                transition={{\r\n                    duration: 0.4,\r\n                    ease: 'linear'\r\n                }}\r\n            />\r\n            <motion.div \r\n                className=\"pvGame\"\r\n                initial={{ \r\n                    opacity: 0,\r\n                    y: '-100%'\r\n                 }}\r\n                animate={{ \r\n                    opacity: 1,\r\n                    y: 0\r\n                 }}\r\n                transition={{duration: 0.4}}\r\n            >\r\n                <div className=\"pvGame__return\" onClick={() => onClick('ranked')}><img src={cross} /></div>\r\n                <CreatedQueue user={user} socket={socket}/>\r\n            </motion.div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nfunction CreatedQueue({ user, socket }) {\r\n    const [timeSelected, setTimeSelected] = useState('3:00')\r\n    const [isQueue, setIsQueue] = useState(false)\r\n    const [queueTime, setQueueTime] = useState(0)\r\n    const history = useHistory()\r\n    let interval = ''\r\n\r\n    useEffect(() => {\r\n        socket.on('gameStart', (socketData) => {\r\n            console.log('data received')\r\n            history.push(`/game/${socketData}`)\r\n        })\r\n\r\n        return () => {\r\n            console.log('deleiting')\r\n            socket.emit('leaveMatchmaking', user)\r\n            socket.removeAllListeners('gameStart')\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if(isQueue) {\r\n            interval = setInterval(()=> {\r\n                setQueueTime(queueTime => queueTime += 1)\r\n            }\r\n            ,1000)\r\n        }\r\n        return () => {\r\n            clearInterval(interval)\r\n        }\r\n    }, [isQueue])\r\n\r\n    const handleClick = () => {\r\n        setIsQueue(true)\r\n        socket.emit('joinMatchmaking', user)\r\n    }\r\n\r\n    return (\r\n        <div className=\"pvGame__create\">\r\n            {!isQueue ? \r\n                <>\r\n                    <h2>Select your preference</h2>\r\n                    <div className=\"pvGame__create__timeContainer\">\r\n                        <TimeBlock time='0:30' timeSelected={timeSelected} onClick={(time) => setTimeSelected(time)} />\r\n                        <TimeBlock time='3:00' timeSelected={timeSelected} onClick={(time) => setTimeSelected(time)} />\r\n                        <TimeBlock time='5:00' timeSelected={timeSelected} onClick={(time) => setTimeSelected(time)} />\r\n                    </div>\r\n                    <button onClick={handleClick}>Lets go</button>\r\n                </>\r\n                :\r\n                <>\r\n                {isQueue === 'loading' ? <h2>Loading ...</h2>\r\n                :\r\n                    <div className=\"pvGame__create__queue\">\r\n                        {/* wait for the friend to join, when he's there, start the game + redirect both players*/}\r\n                        <h2>You are actually in queue</h2>\r\n                        <div className=\"loader\"></div>\r\n                        \r\n                        <h3>{secondToReadable(queueTime)}</h3>\r\n\r\n                        <div className=\"pvGame__create__timeContainer\">\r\n                            <div className=\"pvGame__create__timeContainer__block pvGame__create__timeContainer__block__selected\">\r\n                                {timeSelected}\r\n                            </div>\r\n                        </div>\r\n                        \r\n                    </div>}\r\n                </>}\r\n\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\pierr\\Desktop\\code\\_tuto\\power4\\frontend\\src\\lib\\game\\getGameInfo.js",[],["187","188"],"C:\\Users\\pierr\\Desktop\\code\\_tuto\\power4\\frontend\\src\\lib\\user\\getUserInfoById.js",[],"C:\\Users\\pierr\\Desktop\\code\\_tuto\\power4\\frontend\\src\\lib\\user\\getUserInfoByPseudo.js",[],"C:\\Users\\pierr\\Desktop\\code\\_tuto\\power4\\frontend\\src\\lib\\rank\\rankToReadable.js",[],"C:\\Users\\pierr\\Desktop\\code\\_tuto\\power4\\frontend\\src\\lib\\time\\secondToReadable.js",[],"C:\\Users\\pierr\\Desktop\\code\\_tuto\\power4\\frontend\\src\\pages\\game\\components\\WinnerModal.js",["189"],"import React, {useEffect, useState} from 'react'\r\nimport { useHistory } from 'react-router'\r\nimport { motion , AnimatePresence} from 'framer-motion'\r\nimport { createPortal } from 'react-dom'\r\n\r\n\r\nimport rankToReadable from '../../../lib/rank/rankToReadable'\r\nimport setRankImage from '../../../lib/rank/setRankImage'\r\n\r\n\r\n\r\nexport default function WinnerModal({userId, gameValue}) {\r\n    let history = useHistory();\r\n    const [victory, setVictory] = useState(null)\r\n    const [rank, setRank] = useState({})\r\n    \r\n    let userValue\r\n    if(gameValue.host.id === userId) {\r\n        userValue = gameValue.host\r\n    } else if(gameValue.opponent.id === userId) {\r\n        userValue = gameValue.opponent\r\n    }\r\n    \r\n    useEffect(() => {\r\n        let timer\r\n        if(gameValue.winner === userValue.id) {\r\n            setVictory(true)\r\n        } else {\r\n            setVictory(false)\r\n        }\r\n        if(gameValue.gameType === 'ranked') {\r\n            setRank({...rank, \r\n                img : setRankImage(rankToReadable(userValue.actualRank).split(' ')[0]),\r\n                gem : parseInt(rankToReadable(userValue.actualRank).split(' ')[1]),\r\n                newImg : setRankImage(rankToReadable(userValue.newRank).split(' ')[0]),\r\n                newGem : parseInt(rankToReadable(userValue.newRank).split(' ')[1]),\r\n            })\r\n\r\n            timer = setTimeout(()=> {\r\n                setRank((r) => ({...r, \r\n                    pallierChange: r.img !== r.newImg,\r\n                    rankChange: true\r\n                }))\r\n            }, 1000)\r\n        } else {\r\n            console.log('unranked')\r\n            setRank('unranked')\r\n        }\r\n\r\n\r\n        return () => {\r\n            clearTimeout(timer)\r\n        }\r\n    }, [])\r\n\r\n\r\n    return createPortal(\r\n        rank && <div className='winnerModal'>\r\n        <motion.div \r\n            className=\"winnerModal__background\" \r\n            initial={{ opacity: 0 }}\r\n            animate={{ opacity: 0.8 }}\r\n            transition={{\r\n                duration:0.4,\r\n            }}\r\n        />\r\n        <motion.div \r\n            className=\"winnerModal__userView--container\"\r\n            initial={{ y: -500}}\r\n            animate={{ y: 0 }}\r\n            transition={{\r\n                duration:0.4,\r\n            }}\r\n        >\r\n            <div className=\"winnerModal__userView\">\r\n                {rank !== 'unranked' ?\r\n                <>\r\n                    <AnimatePresence>\r\n                        {!rank.pallierChange && <RankImage src={rank.img}/>}\r\n                    </AnimatePresence>\r\n                    <AnimatePresence>\r\n                        {rank.pallierChange && <RankImage src={rank.newImg}/>}\r\n                    </AnimatePresence>\r\n                    <div className=\"winnerModal__userView__rankBox\">\r\n                        {rankToReadable(userValue.newRank).split(' ')[0] === 'beast' ?\r\n                        <div className=\"winnerModal__userView__rankBox__beast\">\r\n                            <motion.p\r\n                                initial={{ y: '-100%', opacity: 0}}\r\n                                animate={{ y: 0, opacity: 1}}\r\n                                exit={{ y: '100%', opacity: 0}}\r\n                                transition={{delay: 1, duration: 0.3}}\r\n                            >{rank.newGem}</motion.p>\r\n                        </div>\r\n                        \r\n                        :[1,2,3].map((x) => \r\n                            <div  className=\"winnerModal__userView__rankBox__container\" key={x}>\r\n                                {(x<=rank.gem && x<=rank.newGem) ?\r\n                                <div className='winnerModal__userView__rankBox__full'></div> :\r\n                                x<=rank.newGem ?\r\n                                    <motion.div \r\n                                    className='winnerModal__userView__rankBox__full'\r\n                                    initial={{ scale: 0 }}\r\n                                    animate={{ scale: 1 }}\r\n                                    transition={{ delay: 1.5, duration: 0.5 }}\r\n                                /> :\r\n                                (x<=rank.gem && x>rank.newGem) &&\r\n                                <motion.div \r\n                                    className='winnerModal__userView__rankBox__full'\r\n                                    initial={{ scale: 1 }}\r\n                                    animate={{ scale: 0 }}\r\n                                    transition={{ delay: 1.5, duration: 0.5 }}\r\n                                />\r\n                                }\r\n\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </> :\r\n                <p className='winnerModal__userView__unranked'>No rank change for this game</p>\r\n                }\r\n                <div className=\"winnerModal__userView__text\">\r\n                    {victory === null ?(\r\n                    <p>stop hack me bro :( \r\n                     win the game !</p>)\r\n                    : victory === true ? (\r\n                        <p className=\"winnerModal__userView__text__result\">Victory !</p>\r\n                    ): (\r\n                        <p className=\"winnerModal__userView__text__result\">Defeat !</p>\r\n                    )\r\n                    }\r\n                </div>\r\n            </div>\r\n            <button \r\n                className=\"nextButton\"\r\n                onClick={() => history.push(`/`)}\r\n            >HOME</button>\r\n        </motion.div>\r\n        </div>, document.getElementById('root')\r\n    )\r\n}\r\n\r\nfunction RankImage({src}) {\r\n    console.log('render')\r\n    return (\r\n        <motion.img \r\n            key={src}\r\n            src={src} \r\n            alt='rank'\r\n            width='300px'\r\n            height='300px'\r\n            initial={{ opacity:0, x: '-100%'}}\r\n            animate={{ opacity: 1, x: 0}}\r\n            exit={{ opacity: 0, x: '100%'}}\r\n            transition={{ duration: 0.5}}\r\n        />\r\n    )\r\n}\r\n","C:\\Users\\pierr\\Desktop\\code\\_tuto\\power4\\frontend\\src\\pages\\game\\components\\allCase.js",[],"C:\\Users\\pierr\\Desktop\\code\\_tuto\\power4\\frontend\\src\\pages\\game\\components\\GamePlayerPreview.js",["190","191","192","193"],"import React, {useEffect, useState} from 'react'\r\nimport UserView from '../../../component/userView';\r\nimport profilePicture from '../../../images/pierre.jpg'\r\nimport secondToReadable from '../../../lib/time/secondToReadable'\r\nimport rankToReadable from '../../../lib/rank/rankToReadable'\r\nimport getUserInfoByPseudo from '../../../lib/user/getUserInfoByPseudo';\r\nimport { AnimatePresence, motion } from 'framer-motion'\r\nimport { useHistory } from 'react-router';\r\n\r\nexport default function GamePlayerPreview({gameValue, player, position}) {\r\n    const time = secondToReadable(gameValue.time[player])\r\n    let history = useHistory()\r\n\r\n    return (\r\n        <div className={`game__players__player game__players__player__${position}`}>\r\n            <div className={`profilePicture game__players__player__profilePicture profilePicture game__players__player__${position}__profilePicture`}>\r\n                        <img \r\n                            alt=\"profilePicture\" \r\n                            src={profilePicture}\r\n                            width='40px'\r\n                            heigh='40px'\r\n                        />\r\n            </div>\r\n            <div className=\"game__players__player__profile\">\r\n                <p className=\"game__players__player__profile__pseudo\" onClick={() => history.push(`/profile/${gameValue[player].pseudo}`)}>{gameValue[player].pseudo}</p>\r\n                <p className=\"game__players__player__profile__rank\">{rankToReadable(gameValue[player].actualRank)}</p>\r\n            </div>\r\n\r\n            <div className={`game__players__player__time game__players__player__${position}__time`}>{time}</div>\r\n            <AnimatePresence>\r\n                {gameValue.playerTurn === gameValue[player].id && \r\n                    <motion.div \r\n                        className={`game__players__player__pawn game__players__player__${position}__pawn`}\r\n                        key='pawn'\r\n                        initiale={{\r\n                            opacity: 0\r\n                        }}\r\n                        animate={{\r\n                            opacity: 1\r\n                        }}\r\n                        exit={{\r\n                            opacity: 0\r\n                        }}\r\n                    ></motion.div>\r\n                }\r\n            </AnimatePresence>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\pierr\\Desktop\\code\\_tuto\\power4\\frontend\\src\\pages\\game\\components\\Case.js",[],"C:\\Users\\pierr\\Desktop\\code\\_tuto\\power4\\frontend\\src\\pages\\game\\components\\playableLines.js",[],["194","195"],"C:\\Users\\pierr\\Desktop\\code\\_tuto\\power4\\frontend\\src\\lib\\historic\\getGames.js",[],"C:\\Users\\pierr\\Desktop\\code\\_tuto\\power4\\frontend\\src\\lib\\game\\isInGame.js",[],"C:\\Users\\pierr\\Desktop\\code\\_tuto\\power4\\frontend\\src\\lib\\stats\\getStats.js",[],"C:\\Users\\pierr\\Desktop\\code\\_tuto\\power4\\frontend\\src\\lib\\stats\\setWinrate.js",[],"C:\\Users\\pierr\\Desktop\\code\\_tuto\\power4\\frontend\\src\\lib\\rank\\setRankImage.js",["196"],"import bronze from '../../images/rank/bronze.png'\r\nimport silver from '../../images/rank/silver.png'\r\nimport gold from '../../images/rank/gold.png'\r\nimport plat from '../../images/rank/plat.png'\r\nimport diam from '../../images/rank/diam.png'\r\nimport chall from '../../images/rank/chall.png'\r\nimport rankToReadable from './rankToReadable'\r\n\r\nconst rankImg = {bronze : bronze, silver: silver, gold: gold, platinium: plat, diamond: diam, beast: chall}\r\n\r\nexport default function setRankImage(rank) {\r\n    return rankImg[rank.split(' ')[0]]\r\n}",{"ruleId":"197","replacedBy":"198"},{"ruleId":"199","replacedBy":"200"},{"ruleId":"201","severity":1,"message":"202","line":24,"column":9,"nodeType":"203","messageId":"204","endLine":24,"endColumn":14},{"ruleId":"205","severity":1,"message":"206","line":24,"column":50,"nodeType":"207","endLine":24,"endColumn":52,"suggestions":"208"},{"ruleId":"201","severity":1,"message":"209","line":25,"column":9,"nodeType":"203","messageId":"204","endLine":25,"endColumn":20},{"ruleId":"205","severity":1,"message":"210","line":25,"column":60,"nodeType":"207","endLine":25,"endColumn":62,"suggestions":"211"},{"ruleId":"201","severity":1,"message":"212","line":11,"column":12,"nodeType":"203","messageId":"204","endLine":11,"endColumn":20},{"ruleId":"201","severity":1,"message":"213","line":9,"column":19,"nodeType":"203","messageId":"204","endLine":9,"endColumn":26},{"ruleId":"201","severity":1,"message":"214","line":10,"column":21,"nodeType":"203","messageId":"204","endLine":10,"endColumn":30},{"ruleId":"201","severity":1,"message":"215","line":13,"column":12,"nodeType":"203","messageId":"204","endLine":13,"endColumn":21},{"ruleId":"201","severity":1,"message":"216","line":7,"column":13,"nodeType":"203","messageId":"204","endLine":7,"endColumn":17},{"ruleId":"205","severity":1,"message":"217","line":11,"column":7,"nodeType":"207","endLine":11,"endColumn":9,"suggestions":"218"},{"ruleId":"197","replacedBy":"219"},{"ruleId":"199","replacedBy":"220"},{"ruleId":"205","severity":1,"message":"221","line":32,"column":8,"nodeType":"207","endLine":32,"endColumn":16,"suggestions":"222"},{"ruleId":"205","severity":1,"message":"221","line":52,"column":7,"nodeType":"207","endLine":52,"endColumn":13,"suggestions":"223"},{"ruleId":"224","severity":1,"message":"225","line":46,"column":84,"nodeType":"226","endLine":46,"endColumn":103},{"ruleId":"205","severity":1,"message":"227","line":81,"column":8,"nodeType":"207","endLine":81,"endColumn":10,"suggestions":"228"},{"ruleId":"205","severity":1,"message":"227","line":138,"column":8,"nodeType":"207","endLine":138,"endColumn":19,"suggestions":"229"},{"ruleId":"201","severity":1,"message":"230","line":5,"column":8,"nodeType":"203","messageId":"204","endLine":5,"endColumn":15},{"ruleId":"205","severity":1,"message":"231","line":20,"column":15,"nodeType":"232","endLine":37,"endColumn":6},{"ruleId":"205","severity":1,"message":"221","line":37,"column":8,"nodeType":"207","endLine":37,"endColumn":10,"suggestions":"233"},{"ruleId":"224","severity":1,"message":"225","line":49,"column":21,"nodeType":"226","endLine":49,"endColumn":74},{"ruleId":"234","severity":1,"message":"235","line":112,"column":1,"nodeType":"236","messageId":"237","endLine":123,"endColumn":11},{"ruleId":"201","severity":1,"message":"238","line":1,"column":39,"nodeType":"203","messageId":"204","endLine":1,"endColumn":45},{"ruleId":"201","severity":1,"message":"214","line":12,"column":21,"nodeType":"203","messageId":"204","endLine":12,"endColumn":30},{"ruleId":"224","severity":1,"message":"225","line":38,"column":83,"nodeType":"226","endLine":38,"endColumn":102},{"ruleId":"205","severity":1,"message":"239","line":65,"column":8,"nodeType":"207","endLine":65,"endColumn":10,"suggestions":"240"},{"ruleId":"205","severity":1,"message":"241","line":69,"column":24,"nodeType":"242","endLine":72,"endColumn":19},{"ruleId":"197","replacedBy":"243"},{"ruleId":"199","replacedBy":"244"},{"ruleId":"205","severity":1,"message":"245","line":54,"column":8,"nodeType":"207","endLine":54,"endColumn":10,"suggestions":"246"},{"ruleId":"201","severity":1,"message":"247","line":1,"column":16,"nodeType":"203","messageId":"204","endLine":1,"endColumn":25},{"ruleId":"201","severity":1,"message":"248","line":1,"column":27,"nodeType":"203","messageId":"204","endLine":1,"endColumn":35},{"ruleId":"201","severity":1,"message":"249","line":2,"column":8,"nodeType":"203","messageId":"204","endLine":2,"endColumn":16},{"ruleId":"201","severity":1,"message":"250","line":6,"column":8,"nodeType":"203","messageId":"204","endLine":6,"endColumn":27},{"ruleId":"197","replacedBy":"251"},{"ruleId":"199","replacedBy":"252"},{"ruleId":"201","severity":1,"message":"253","line":7,"column":8,"nodeType":"203","messageId":"204","endLine":7,"endColumn":22},"no-native-reassign",["254"],"no-negated-in-lhs",["255"],"no-unused-vars","'value' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useMemo has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["256"],"'valueSocket' is assigned a value but never used.","React Hook useMemo has a missing dependency: 'socket'. Either include it or remove the dependency array.",["257"],"'redirect' is assigned a value but never used.","'setUser' is assigned a value but never used.","'setSocket' is assigned a value but never used.","'listGames' is assigned a value but never used.","'user' is assigned a value but never used.","React Hook useMemo has a missing dependency: 'setUser'. Either include it or remove the dependency array.",["258"],["254"],["255"],"React Hook useEffect has a missing dependency: 'slug'. Either include it or remove the dependency array.",["259"],["260"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'history' and 'socket'. Either include them or remove the dependency array.",["261"],["262"],"'rankImg' is defined but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression",["263"],"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'useRef' is defined but never used.","React Hook useEffect has missing dependencies: 'history', 'socket', and 'user'. Either include them or remove the dependency array.",["264"],"Assignments to the 'interval' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression",["254"],["255"],"React Hook useEffect has missing dependencies: 'gameValue.gameType', 'gameValue.winner', 'rank', 'userValue.actualRank', 'userValue.id', and 'userValue.newRank'. Either include them or remove the dependency array. You can also do a functional update 'setRank(r => ...)' if you only need 'rank' in the 'setRank' call.",["265"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'UserView' is defined but never used.","'getUserInfoByPseudo' is defined but never used.",["254"],["255"],"'rankToReadable' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"266","fix":"267"},{"desc":"268","fix":"269"},{"desc":"270","fix":"271"},{"desc":"272","fix":"273"},{"desc":"274","fix":"275"},{"desc":"276","fix":"277"},{"desc":"278","fix":"279"},{"desc":"280","fix":"281"},{"desc":"282","fix":"283"},{"desc":"284","fix":"285"},"Update the dependencies array to be: [user]",{"range":"286","text":"287"},"Update the dependencies array to be: [socket]",{"range":"288","text":"289"},"Update the dependencies array to be: [setUser]",{"range":"290","text":"291"},"Update the dependencies array to be: [slug, socket]",{"range":"292","text":"293"},"Update the dependencies array to be: [slug, user]",{"range":"294","text":"295"},"Update the dependencies array to be: [history, socket]",{"range":"296","text":"297"},"Update the dependencies array to be: [gameValue, history, socket]",{"range":"298","text":"299"},"Update the dependencies array to be: [slug]",{"range":"300","text":"301"},"Update the dependencies array to be: [history, socket, user]",{"range":"302","text":"303"},"Update the dependencies array to be: [gameValue.gameType, gameValue.winner, rank, userValue.actualRank, userValue.id, userValue.newRank]",{"range":"304","text":"305"},[805,807],"[user]",[868,870],"[socket]",[320,322],"[setUser]",[1068,1076],"[slug, socket]",[1798,1804],"[slug, user]",[2785,2787],"[history, socket]",[4593,4604],"[gameValue, history, socket]",[1527,1529],"[slug]",[2080,2082],"[history, socket, user]",[1735,1737],"[gameValue.gameType, gameValue.winner, rank, userValue.actualRank, userValue.id, userValue.newRank]"]